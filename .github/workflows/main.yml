name: CI Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  APP_ID: mcq-gen
  REGION: asia-south1

jobs:
  py_test:
    runs-on: ubuntu-latest
    name: Test - Python
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Decode secrets
        run: |-
          ls

          echo $SERVICE_ACCOUNT_SECRET | base64 -d > mock-key.json
        env:
          SERVICE_ACCOUNT_SECRET: ${{ secrets.FB_SA_KEY_JSON }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pytest-cov spacy gdown
          pip install -r docker/app/requirements.txt
          python3 -m spacy download en_core_web_sm
      - name: Analyze
        run: |
          pylint $(git ls-files '*.py')
      - name: Test
        run: |
          python -m pytest --cov=./ --cov-report=xml
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: unittests
          verbose: true
  cloud_deploy:
    needs: py_test
    runs-on: ubuntu-latest
    name: Deploy to cloud
    defaults:
      run:
        working-directory: ./docker
    if: "contains(github.event.head_commit.message, 'deploy to cloud')"
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
      - name: Authorize docker push
        run: gcloud auth configure-docker
      - name: Build and push container
        run: |-
          docker build -t gcr.io/${{ secrets.GCP_PRJ_ID }}/${{ env.APP_ID }}:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PRJ_ID }}/${{ env.APP_ID }}:${{ github.sha }}
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.APP_ID }} --region ${{ env.REGION }} --image gcr.io/${{ secrets.GCP_PRJ_ID }}/${{ env.APP_ID }}:${{ github.sha }} \
          --platform managed --cpu 4 --concurrency 1 --memory 16Gi --min-instances 0 --timeout 60m --port 80 --allow-unauthenticated
  flutter_test:
    runs-on: ubuntu-latest
    name: Test - Flutter
    defaults:
      run:
        working-directory: ./quizzzy
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.5"
          channel: "stable"
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze
        run: flutter analyze
      - name: Test
        run: flutter test --no-sound-null-safety
  build_apk:
    needs: flutter_test
    runs-on: ubuntu-latest
    name: Build Flutter - Apk
    defaults:
      run:
        working-directory: ./quizzzy
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.5"
          channel: "stable"
      - name: Install dependencies
        run: |-
          flutter pub get
          flutter clean
      - name: Decode secrets
        run: echo $GOOGLE_SERVICE_SECRET | base64 -d > android/app/mock-key.json
        env:
          GOOGLE_SERVICE_SECRET: ${{ secrets.GGL_SV_KEY_JSON }}
      - name: Build
        run: flutter build apk --no-sound-null-safety
